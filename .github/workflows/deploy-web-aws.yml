name: Deploy web to AWS

permissions:
  contents: read

on:
  push:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_CLOUD_ORGANIZATION: "crack-squirrels"
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  TF_BLIT_WORKSPACE: "blit-web"
  TD_BLIT_CONFIG_DIRECTORY: "./web/terraform"
  TF_ROOT_WORKSPACE: "blit-cloudflare"
  TD_ROOT_CONFIG_DIRECTORY: "./terraform"

jobs:
  deploy-aws:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - name: Set up OPS
        run: curl https://ops.city/get.sh -sSfL | sh
      - name: Set OPS environment variables
        run: |
          echo "OPS_DIR=$HOME/.ops" >> $GITHUB_ENV
          echo "$HOME/.ops/bin" >> $GITHUB_PATH
      - uses: pnpm/action-setup@v3
        with:
          version: latest
          run_install: |
            - recursive: true
      - name: Create AMI
        run: |
          cd web
          echo PATH=$PATH
          echo OPS_DIR=$OPS_DIR
          make image-create-aws
      - name: Set AMI ID
        run: |
          cd web
          make image-get-aws | jq
          AMI_ID=$(echo $(make image-get-aws) | jq -r '.ID')
          echo "TF_VAR_ami_id=\"$AMI_ID\"" >> $GITHUB_ENV
      - name: TF Upload Configuration Web
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: web-apply-upload
        with:
          workspace: ${{ env.TF_BLIT_WORKSPACE }}
          directory: ${{ env.TD_BLIT_CONFIG_DIRECTORY }}
      - name: TF Create Apply Run Web
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: web-apply-run
        with:
          workspace: ${{ env.TF_BLIT_WORKSPACE }}
          configuration_version: ${{ steps.web-apply-upload.outputs.configuration_version_id }}
      - name: TF Apply Web
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: fromJSON(steps.web-apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: web-apply
        with:
          run: ${{ steps.web-apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"
